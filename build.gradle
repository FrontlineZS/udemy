plugins {
    id 'java'
    id 'idea'
    id 'org.sonarqube' version '2.8'
    id 'nebula.release' version '15.1.0'
    id 'com.jfrog.artifactory' version '4.10.0'
    id 'io.freefair.lombok' version '5.3.0'
    id 'com.github.ben-manes.versions' version '0.27.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}

ext {
    socratesDependenciesVersion = '1.13.1-SNAPSHOT'
}

repositories {
    maven { url "https://artifactory.assecods.pl/artifactory/socrates2-virtual" }
}

dependencyManagement {
    imports {
        mavenBom "pl.assecods.socrates:socrates-dependencies:${socratesDependenciesVersion}"
    }
}

ext {
    springStateMachineVersion = "2.4.0"
    springBootVersion = dependencyManagement.importedProperties['spring.boot.version']
    springCloudVersion = dependencyManagement.importedProperties['spring.cloud.version']

    // dir
    releaseDir = file("${rootProject.name}/build/docker/")
    configDir = file("${releaseDir}/config")
}

apply from: new File(rootProject.projectDir, "gradle/docker.gradle")

// Sub projects configuration
subprojects {
    // Build scripts repositories
    buildscript {
        repositories {
            mavenLocal()
            maven { url "https://artifactory.assecods.pl/artifactory/socrates2-virtual" }
            jcenter()
        }
    }

    // Plugins
    apply plugin: 'jacoco'
    apply plugin: 'io.freefair.lombok'
    apply plugin: 'java-library'
    apply from: new File(rootProject.projectDir, "gradle/artifactory.gradle")

    // Properties
    group = rootProject.group
    sourceCompatibility = 11
    targetCompatibility = 11

    // Repositories
    repositories {
        mavenLocal()
        maven { url "https://artifactory.assecods.pl/artifactory/socrates2-virtual" }
        jcenter()
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    lombok {
        config['lombok.anyConstructor.addConstructorProperties'] = 'true'
    }

    // Dependencies
    dependencies {
        implementation platform(group: 'pl.assecods.socrates', name: 'socrates-dependencies', version: socratesDependenciesVersion, changing: true)
        implementation platform(group: 'org.springframework.boot', name: 'spring-boot-dependencies', version: springBootVersion, changing: true)
        implementation platform(group: 'org.springframework.cloud', name: 'spring-cloud-dependencies', version: springCloudVersion, changing: true)

        compileOnly group: 'com.google.code.findbugs', name: 'jsr305'

        // Tests
        testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion)

    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    task copyResource(dependsOn: build) {
    }

    task cleanUp(type: Delete) {
        delete 'build', 'out'
    }

    clean.doLast { cleanUp }
}
